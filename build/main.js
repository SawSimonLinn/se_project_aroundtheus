!function(){"use strict";var e=class{constructor(e,t,s,n,i){this._name=e.name,this._link=e.link,this._id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleCardImageClick=s,this._handleDeleteClick=n,this._handleLikeClick=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card__list-item").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeClick(this))),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick(this))),this._cardImageElement.addEventListener("click",(()=>{this._handleCardImageClick({name:this._name,link:this._link})}))}renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}toggleLike(){this._likeButton.classList.toggle("card__like-button_active")}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getCardElement(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector("#card__like-button"),this._deleteButton=this._cardElement.querySelector("#card__delete-button"),this._cardImageElement=this._cardElement.querySelector("#card__image"),this._cardTitleElement=this._cardElement.querySelector("#card__title"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTitleElement.textContent=this._name,this.renderLikes(),this._setEventListeners(),this._cardElement}},t=class{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputElements)?this.disableButton():this._enableButton()}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputElements)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}},s=class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}renderer(e){this._renderer(e)}addItem(e){this._container.prepend(e)}},n=class{constructor(e){let{popupSelector:t}=e;this.popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this.popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()}))}},i=class extends n{constructor(e,t){super({popupSelector:e}),this._form=this.popupElement.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._handleFormSubmit=t,this._submitButton=this._form.querySelector(".modal__button")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}reset(){this._form.reset()}setSubmitButtonText(e){this._submitButton.textContent=e}};const r=document.querySelectorAll(".modal__form"),o=document.querySelector("#profile__edit-button"),a=document.querySelector(".profile__container"),l=document.querySelector("#profile__add-card-button"),c=document.querySelector("[name='name']"),h=document.querySelector("[name='about']"),d={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",modalSpan:".modal__span"},u=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this.checkResponse)}editProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this.checkResponse)}editProfileImage(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then(this.checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this.checkResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this.checkResponse)}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this.checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this.checkResponse)}disLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this.checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"1abbe3bb-ec4a-49b1-8cc7-97fb0e8300a6","Content-Type":"application/json"}}),_=new class{constructor(e,t){this._container=document.querySelector(e),this._icon=document.querySelector(t)}showIcon(){this._icon.style.display="inline-block"}hideIcon(){this._icon.style.display="none"}setEventListeners(){this._container.addEventListener("mouseenter",this.showIcon.bind(this)),this._container.addEventListener("mouseleave",this.hideIcon.bind(this))}}(".profile__container",".profile__edit-icon"),m=new class extends n{constructor(e,t){super({popupSelector:e}),this._form=this.popupElement.querySelector(".modal__form"),this._submitButton=this._form.querySelector(".modal__button"),this._handleFormSubmit=t}setSubmitAction(e){this._handleFormSubmit=e}setSubmitButtonText(e){this._submitButton.textContent=e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#delete__modal",g),p=new i("#profile-image-modal",(function(e){p.setSubmitButtonText("Saving...."),u.editProfileImage(e).then((e=>{v.setUserAvatar(e),p.close(),B["profile-image-form"].disableButton(),p.reset()})).catch((e=>{console.error(e)})).finally((()=>{p.setSubmitButtonText("Save")}))})),E=new i("#profile__edit-modal",(function(e){E.setSubmitButtonText("Saving...."),u.editProfile({name:e.name,about:e.about}).then((e=>{let{name:t,about:s}=e;v.setUserInfo({name:t,about:s}),E.close()})).catch((e=>{console.error(e)})).finally((()=>{E.setSubmitButtonText("Save")}))})),b=new i("#add-card-modal",(function(e){b.setSubmitButtonText("Saving...."),u.addCard({name:e.name,link:e.link}).then((e=>{let{name:t,link:s,_id:n}=e;S.addItem(k({name:t,link:s,_id:n})),b.close(),B["card-form"].disableButton(),b.reset()})).catch((e=>{console.error(e)})).finally((()=>{b.setSubmitButtonText("Save")}))})),f=new class extends n{constructor(e){super({popupSelector:e}),this._image=this.popupElement.querySelector(".modal__image"),this._caption=this.popupElement.querySelector(".modal__caption")}open(e){let{name:t,link:s}=e;this._image.src=s,this._image.alt=t,this._caption.textContent=t,super.open()}}("#preview__image-modal");m.setEventListeners(),p.setEventListeners(),E.setEventListeners(),b.setEventListeners(),_.setEventListeners(),f.setEventListeners();const v=new class{constructor(e){let{nameElement:t,aboutElement:s,avatarElement:n}=e;this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(s),this._avatarElement=document.querySelector(n)}getUserInfo(){return this._userInfo={name:this._nameElement.textContent,about:this._aboutElement.textContent},this._userInfo}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._aboutElement.textContent=s}setUserAvatar(e){let{avatar:t}=e;this._avatarElement.src=t}}({nameElement:"#profile__title",aboutElement:".profile__description",avatarElement:".profile__image"});let S;function k(t){return new e(t,"#card__template",C,g,y).getCardElement()}function L(e){const t=k(e);S.addItem(t)}function C(e){f.open(e)}function g(e){m.open(),m.setSubmitAction((()=>{m.setSubmitButtonText("Deleting...."),u.removeCard(e._id).then((()=>{e.handleDeleteCard(),m.close()})).catch((e=>{console.error(e)})).finally((()=>{m.setSubmitButtonText("Delete")}))}))}function y(e){e.isLiked&&u.disLikeCard(e._id).then((()=>{e.toggleLike(),e.isLiked=!1})).catch((e=>{console.error(e)})),e.isLiked||u.likeCard(e._id).then((()=>{e.toggleLike(),e.isLiked=!0})).catch((e=>{console.error(e)}))}u.getUserInfo().then((e=>{v.setUserInfo({name:e.name,about:e.about}),v.setUserAvatar({avatar:e.avatar})})).catch((e=>{console.error(e)})),u.getInitialCards().then((e=>{S=new s({items:e,renderer:L},"#card__list"),S.renderItems()})).catch((e=>{console.error(e)})),o.addEventListener("click",(()=>{const e=v.getUserInfo();c.value=e.name,h.value=e.about,B["profile-form"].resetValidation(),E.open()})),l.addEventListener("click",(()=>{b.open()})),a.addEventListener("click",(()=>{p.open()}));const B={};(e=>{e.forEach((e=>{const s=new t(d,e);s.enableValidation(),B[e.getAttribute("name")]=s}))})(r)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,